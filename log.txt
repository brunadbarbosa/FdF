/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   0-main.c                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: brmaria- <brmaria-@student.42porto.com>    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/07/10 14:29:54 by brmaria-          #+#    #+#             */
/*   Updated: 2025/09/07 14:14:58 by brmaria-         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "fdf.h"
#include "libft.h"
#include "get_next_line.h"

void	init_view(t_view *view)
{
	view->mlx = mlx_init();
	view->win = mlx_new_window(view->mlx,
			1000, 800, "FDF 2D Viewer");
	view->zoom = 5;
	view->angle_x = 0;
	view->angle_y = 0;
	view->angle_z = 0;
	view->z_scale = 3;
	view->x_offset = 1000 / 2;
	view->y_offset = 800 / 4;
	view->img = mlx_new_image(view->mlx, 1000, 800);
	view->addr = mlx_get_data_addr(view->img,
			&view->bpp, &view->line_length, &view->endian);
}

void	free_split(char **tokens)
{
	int	i;

	i = 0;
	while (tokens[i])
	{
		free(tokens[i]);
		i++;
	}
	free(tokens);
}

void	free_map(t_view *view)
{
	int	i;

	i = 0;
	if (!view || !view->map)
		return ;
	i = 0;
	while (i < view->height)
	{
		free(view->map[i]);
		i++;
	}
	free(view->map);
	view->map = NULL;
}

int	main(int argc, char **argv)
{
	t_view	*view;

		if (argc != 2)
	{
		printf("Usage: ./fdf <map_file>\n");
		return (1);
	}
	view = malloc(sizeof(t_view));
	parse(argv[1], view);
	init_view(view);
	draw_map(view);
	mlx_key_hook(view->win, handle_keypress, view);
	mlx_hook(view->win, 17, 0, handle_close, view);
	mlx_loop(view->mlx);
	free_map(view);
	free(view->mlx);
	free(view);
	return (0);
}
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   1-parsing.c                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: brmaria- <brmaria-@student.42porto.com>    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/07/28 10:58:30 by brmaria-          #+#    #+#             */
/*   Updated: 2025/09/07 13:24:42 by brmaria-         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "fdf.h"
#include "libft.h"
#include "get_next_line.h"

int	check_width(char **split, int expected)
{
	int	i;

	i = 0;
	while (split[i] && split[i][0] != '\n')
		i++;
	return (i == expected);
}

static int	get_width(char *file)
{
	int		fd;
	char	c;
	int		width;

	width = 0;
	fd = open(file, O_RDONLY);
	if (fd < 0)
		return (-1);
	while (read(fd, &c, 1) > 0)
	{
		if ((c >= '0' && c <= '9') || c == '-')
		{
			width++;
			while (c != ' ' && c != '\n')
				read(fd, &c, 1);
		}
		if (c == '\n')
			break ;
	}
	close(fd);
	return (width);
}

static int	get_height(char *file)
{
	char	c;
	int		height;
	int		in_line;
	int		fd;

	height = 0;
	in_line = 0;
	fd = open(file, O_RDONLY);
	if (fd < 0)
		error();
	while (read(fd, &c, 1) > 0)
	{
		if (c == '\n')
		{
			height++;
			in_line = 0;
		}
		else
			in_line = 1;
	}
	if (in_line)
		height++;
	close(fd);
	return (height);
}

int	atoi_hex(const char *str)
{
	int	result;
	int	i;

	result = 0;
	i = 0;
	if (str[0] == '0' && (str[1] == 'x' || str[1] == 'X'))
		i = 2;
	while (str[i])
	{
		result *= 16;
		if (str[i] >= '0' && str[i] <= '9')
			result += str[i] - '0';
		else if (str[i] >= 'A' && str[i] <= 'F')
			result += str[i] - 'A' + 10;
		else if (str[i] >= 'a' && str[i] <= 'f')
			result += str[i] - 'a' + 10;
		else
			break ;
		i++;
	}
	return (result);
}

void	parse(char *file, t_view *view)
{
	int		fd;
	int		i;
	char	*line;
	char	**split;

	i = -1;
	view->width = get_width(file);
	view->height = get_height(file);
	view->map = malloc(sizeof(t_point *) * view->height);
	fd = open(file, O_RDONLY);
	if (!view->map || fd < 0)
		error_fd(view);
	line = get_next_line(fd);
	while (line != NULL)
	{
		view->map[++i] = malloc(sizeof(t_point) * view->width);
		if (!view->map[i])
			error_fd(view);
		split = ft_split(line, ' ');
		add_measures(view, split, i);
		free_split(split);
		free(line);
		line = get_next_line(fd);
	}
	close(fd);
}
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   2-screen.c                                         :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: brmaria- <brmaria-@student.42porto.com>    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/07/21 13:18:00 by brmaria-          #+#    #+#             */
/*   Updated: 2025/09/07 13:47:26 by brmaria-         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "fdf.h"

int	direction(int a, int b)
{
	if (a < b)
		return (1);
	else
		return (-1);
}

void	init_bresenham(t_bresenham *b, t_point a, t_point b_point)
{
	b->dx = fabs(b_point.x - a.x);
	b->dy = fabs(b_point.y - a.y);
	b->sx = direction(a.x, b_point.x);
	b->sy = direction(a.y, b_point.y);
	b->err = b->dx - b->dy;
}

void	isometric_projection(t_point *p)
{
	int	prev_x;
	int	prev_y;

	prev_x = p->x;
	prev_y = p->y;
	p->x = (prev_x - prev_y) * cos(0.523599);
	p->y = (prev_x + prev_y) * sin(0.523599) - p->z;
}

t_point	get_projected_point(t_point original, t_view *view)
{
	t_point	projected;

	projected.x = original.x * view->zoom;
	projected.y = original.y * view->zoom;
	projected.z = original.z * view->z_scale;
	rotate_x(&projected.y, &projected.z, view->angle_x);
	rotate_y(&projected.x, &projected.z, view->angle_y);
	rotate_z(&projected.x, &projected.y, view->angle_z);
	isometric_projection(&projected);
	projected.x += view->x_offset;
	projected.y += view->y_offset;
	projected.color = original.color;
	return (projected);
}

void	draw_map(t_view *view)
{
	int		x;
	int		y;
	t_point	a;
	t_point	b;

	y = 0;
	while (++y < view->height)
	{
		x = 0;
		while (++x < view->width)
		{
			a = get_projected_point(view->map[y][x], view);
			if (x < view->width - 1)
			{
				b = get_projected_point(view->map[y][x + 1], view);
				draw_line(view, a, b, a.color);
			}
			if (y < view->height - 1)
			{
				b = get_projected_point(view->map[y + 1][x], view);
				draw_line(view, a, b, a.color);
			}
		}
	}
	mlx_put_image_to_window(view->mlx, view->win, view->img, 0, 0);
}
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   3-drawImage.c                                      :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: brmaria- <brmaria-@student.42porto.com>    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/09/06 13:44:04 by brmaria-          #+#    #+#             */
/*   Updated: 2025/09/07 13:32:12 by brmaria-         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "fdf.h"
#include "libft.h"

void	add_measures(t_view *view, char **split, int i)
{
	int		j;
	char	**z_color;

	j = 0;
	while (j < view->width)
	{
		z_color = ft_split(split[j], ',');
		view->map[i][j].x = j;
		view->map[i][j].y = i;
		view->map[i][j].z = ft_atoi(z_color[0]);
		if (z_color[1])
			view->map[i][j].color = atoi_hex(z_color[1]);
		else
			view->map[i][j].color = 0XFFFFFF;
		printf("%d", view->map[i][j].color);
		free_split(z_color);
		j++;
	}
}

void	draw_pixel(t_view *img, int x, int y, int color)
{
	char	*dst;

	if (x < 0 || y < 0 || x >= 1000 || y >= 800)
		return ;
	dst = img->addr + (y * img->line_length + x * (img->bpp / 8));
	*(unsigned int *)dst = color;
}

void	clear_image(t_view *view)
{
	int	x;
	int	y;

	y = 0;
	while (y < 800)
	{
		x = 0;
		while (x < 1000)
		{
			draw_pixel(view, x, y, 0x000000);
			x++;
		}
		y++;
	}
}

void	draw_line(t_view *img, t_point a, t_point b, int color)
{
	float	step;
	float	x;
	float	y;
	float	dx;
	float	dy;

	dx = b.x - a.x;
	dy = b.y - a.y;
	step = fmax(fabs(dx), fabs(dy));
	dx /= step;
	dy /= step;
	x = a.x;
	y = a.y;
	while ((int)(x - b.x) || (int)(y - b.y))
	{
		draw_pixel(img, x, y, color);
		x += dx;
		y += dy;
	}
}
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   4-commands.c                                       :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: brmaria- <brmaria-@student.42porto.com>    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/09/06 12:20:30 by brmaria-          #+#    #+#             */
/*   Updated: 2025/09/07 13:47:49 by brmaria-         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "fdf.h"

int	handle_close(t_view *view)
{
	mlx_destroy_image(view->mlx, view->img);
	mlx_destroy_window(view->mlx, view->win);
	mlx_destroy_display(view->mlx);
	free(view->mlx);
	free_map(view);
	free(view);
	exit(0);
	return (0);
}

int	handle_keypress2(int keycode, t_view *view)
{
	if (keycode == 45)
		view->zoom--;
	else if (keycode == 105)
		view->z_scale++;
	else if (keycode == 117)
		view->z_scale--;
	return (0);
}

int	handle_keypress(int keycode, t_view *view)
{
	if (keycode == 65307)
		handle_close(view);
	else if (keycode == 65361)
		view->angle_y -= 0.05;
	else if (keycode == 65363)
		view->angle_y += 0.05;
	else if (keycode == 65362)
		view->angle_x -= 0.05;
	else if (keycode == 65364)
		view->angle_x += 0.05;
	else if (keycode == 119)
		view->y_offset -= 10;
	else if (keycode == 115)
		view->y_offset += 10;
	else if (keycode == 97)
		view->x_offset -= 10;
	else if (keycode == 100)
		view->x_offset += 10;
	else if (keycode == 61)
		view->zoom++;
	else
		handle_keypress2(keycode, view);
	clear_image(view);
	draw_map(view);
	return (0);
}
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   5-rotate.c                                         :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: brmaria- <brmaria-@student.42porto.com>    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/08/02 17:09:37 by brmaria-          #+#    #+#             */
/*   Updated: 2025/09/06 12:20:27 by brmaria-         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "fdf.h"

void	rotate_x(double *y, double *z, double angle_x)
{
	double	prev_y;
	double	prev_z;

	prev_y = *y;
	prev_z = *z;
	*y = prev_y * cos(angle_x) - prev_z * sin(angle_x);
	*z = prev_y * sin(angle_x) + prev_z * cos(angle_x);
}

void	rotate_y(double *x, double *z, double angle_y)
{
	double	prev_x;
	double	prev_z;

	prev_x = *x;
	prev_z = *z;
	*x = prev_x * cos(angle_y) + prev_z * sin(angle_y);
	*z = -prev_x * sin(angle_y) + prev_z * cos(angle_y);
}

void	rotate_z(double *x, double *y, double angle_z)
{
	double	prev_x;
	double	prev_y;

	prev_x = *x;
	prev_y = *y;
	*x = prev_x * cos(angle_z) - prev_y * sin(angle_z);
	*y = prev_x * sin(angle_z) + prev_y * cos(angle_z);
}
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   6-error.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: brmaria- <brmaria-@student.42porto.com>    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/07/28 12:09:16 by brmaria-          #+#    #+#             */
/*   Updated: 2025/09/06 13:51:30 by brmaria-         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "fdf.h"

void	error(void)
{
	printf("Error: cannot open file.\n");
	exit(EXIT_FAILURE);
}

void	error_fd(t_view *view)
{
	printf("Error: cannot open file.\n");
	free_map(view);
	free(view);
	exit(EXIT_FAILURE);
}
