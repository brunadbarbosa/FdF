/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   0-main.c                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: brmaria- <brmaria-@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/07/10 14:29:54 by brmaria-          #+#    #+#             */
/*   Updated: 2025/07/23 15:07:49 by brmaria-         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "fdf.h"
#include "libft.h"
#include "get_next_line.h"

void free_split(char **tokens)
{
	int i = 0;
	while (tokens[i])
	{
		free(tokens[i]);
		i++;
	}
	free(tokens);
}

t_point **fill_points(char **lines, int height, int width)
{
	t_point **points;
	char **tokens;
	int y, x;

	points = malloc(sizeof(t_point *) * height);
	if (!points)
		return (NULL);

	y = 0;
	while (y < height)
	{
		points[y] = malloc(sizeof(t_point) * width);
		if (!points[y])
		{
			while (--y >= 0)
				free(points[y]);
			free(points);
			return (NULL);
		}
		tokens = ft_split(lines[y], ' ');
		if (!tokens)
			return (NULL); // poderíamos liberar memória aqui também, se quiser ser hardcore

		x = 0;
		while (x < width)
		{
			points[y][x].x = x;
			points[y][x].y = y;
			points[y][x].z = ft_atoi(tokens[x]);
			x++;
		}
		free_split(tokens);
		y++;
	}
	return (points);
}

int main(int argc, char **argv)
{
	int	fd;
	char	*gnl;

	fd = open(argv[1], O_RDONLY);
	if (argc != 2)
	{
		write(2, "I need only one file!\n", 22);
		return(1);
	}
	gnl = get_next_line(fd);
	while (gnl != NULL)
	{
		char **split = ft_split(gnl, ' ');
		free(gnl);
		gnl = get_next_line(fd);
	}
	if (gnl)
		free(gnl);
	fill_points(split);
	close (fd);
	return (0);
}
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   1-screen.c                                         :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: brmaria- <brmaria-@student.42porto.com>    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/07/21 13:18:00 by brmaria-          #+#    #+#             */
/*   Updated: 2025/07/21 13:18:13 by brmaria-         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "fdf.h"

int	handle_keypress(int keycode, t_vars *vars)
{
	if (keycode == 65307)
	{
		mlx_destroy_window(vars->mlx, vars->win);
		exit(0);
	}
	return (0);
}

int	handle_close(t_vars *vars)
{
	mlx_destroy_window(vars->mlx, vars->win);
	exit(0);
	return (0);
}

void draw_horizontal_line(void *mlx, void *win, int y)
{
	int x;

	x = 0;
	while (x < 800)
	{
		mlx_pixel_put(mlx, win, x, y, 0xFF0000);
		x++;
	}
}

void draw_diagonal_line(void *mlx, void *win)
{
	int x;
	int y;

	x = 0;
	y = 0;
	while (x < 800 && y < 600)
	{
		mlx_pixel_put(mlx, win, x, y, 0x00FF00);
		x++;
		y++;
	}
}

void draw_vertical_line(void *mlx, void *win, int x)
{
	int y;

	y = 0;
	while (y < 800)
	{
		mlx_pixel_put(mlx, win, x, y, 0xFF0000);
		y++;
	}
}